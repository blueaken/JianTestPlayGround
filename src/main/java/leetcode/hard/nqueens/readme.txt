Ref Code Ganker的大作：
http://blog.csdn.net/linhuanmars/article/details/20667175

N皇后问题是非常经典的问题了，记得当时搞竞赛第一道递归的题目就是N皇后。因为这个问题是典型的NP问题，所以在时间复杂度上就不用纠结了，肯定是指
数量级的。下面我们来介绍这个题的基本思路。

主要思想就是一句话：用一个循环递归处理子问题。这个问题中，在每一层递归函数中，我们用一个循环把一个皇后填入对应行的某一列中，如果当前棋盘合
法，我们就递归处理先一行，找到正确的棋盘我们就存储到结果集里面。这种题目都是使用这个套路，就是用一个循环去枚举当前所有情况，然后把元素加入，
递归，再把元素移除，这道题目中不用移除的原因是我们用一个一维数组去存皇后在对应行的哪一列，因为一行只能有一个皇后，如果二维数组，那么就需要
把那一行那一列在递归结束后设回没有皇后，所以道理是一样的。

这道题最后一个细节就是怎么实现检查当前棋盘合法性的问题，因为除了刚加进来的那个皇后，前面都是合法的，我们只需要检查当前行和前面行是否冲突即
可。检查是否同列很简单，检查对角线就是行的差和列的差的绝对值不要相等就可以。

