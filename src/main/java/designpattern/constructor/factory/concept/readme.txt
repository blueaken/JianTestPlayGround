inspired by 潇龙 － http://www.cnblogs.com/zuoxiaolong/p/pattern5.html

设计原则：遵循单一职责、依赖倒置、开闭原则
常用场景：一种场景是希望工厂与产品的种类对客户端保持透明，给客户端提供一致的操作，另外一种是不同的工厂和产品可以提供客户端不同的服务或功能
使用概率：60%
复杂度：中低
变化点：工厂与产品的种类
选择关键点：工厂类和产品类是否是同生同灭的关系
逆鳞：无
相关设计模式
抽象工厂模式：工厂方法模式与抽象工厂模式最大的区别在于，在工厂方法模式中，工厂创造的是一个产品，而在抽象工厂模式中，工厂创造的是一个产品族。

可以看到，我们使用可以随意的在具体的工厂和产品之间切换，并且不需要修改任何代码，就可以让原来的程序正常运行，这也是工厂方法模式对扩展开放的
表现，而且弥补了简单工厂模式不满足开闭原则的诟病，当我们需要增加产品时，只需要增加相应的产品和工厂类，而不需要修改现有的代码 ／ 增加if 分支。

